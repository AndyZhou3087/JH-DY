package com.bukaopu.pipsdk.paychannel.cmpay;import java.io.StringReader;import javax.xml.parsers.DocumentBuilder;import javax.xml.parsers.DocumentBuilderFactory;import org.w3c.dom.Document;import org.w3c.dom.Node;import org.w3c.dom.NodeList;import org.xml.sax.InputSource;import android.text.TextUtils;public class PayResult {	private String resultStatus;	private String result;	private String memo;	public PayResult(String rawResult) {		if (TextUtils.isEmpty(rawResult))			return;		try{			DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance(); 			DocumentBuilder db = dbf.newDocumentBuilder(); 			Document document = db.parse(new InputSource(new StringReader(rawResult))); 			NodeList nodeList = document.getChildNodes();			for(int i=0;i<nodeList.getLength();i++){				Node node = nodeList.item(i);				if("RESULT".equals(node.getNodeName())){					NodeList list = node.getChildNodes();					for(int j=0;j<list.getLength();j++){						Node child = list.item(i);						if("RESULT_CODE".equals(child.getNodeName())){							resultStatus = child.getNodeValue();						}						if("RESULT_MESSAGE".equals(child.getNodeName())){							result = child.getNodeValue();						}					}				}			}		}catch(Exception e){			e.printStackTrace();		}		/*String[] resultParams = rawResult.split(";");		for (String resultParam : resultParams) {			if (resultParam.startsWith("resultStatus")) {				resultStatus = gatValue(resultParam, "resultStatus");			}			if (resultParam.startsWith("result")) {				result = gatValue(resultParam, "result");			}			if (resultParam.startsWith("memo")) {				memo = gatValue(resultParam, "memo");			}		}*/	}	@Override	public String toString() {		return "resultStatus={" + resultStatus + "};memo={" + memo				+ "};result={" + result + "}";	}	private String gatValue(String content, String key) {		String prefix = key + "={";		return content.substring(content.indexOf(prefix) + prefix.length(),				content.lastIndexOf("}"));	}	/**	 * @return the resultStatus	 */	public String getResultStatus() {		return resultStatus;	}	/**	 * @return the memo	 */	public String getMemo() {		return memo;	}	/**	 * @return the result	 */	public String getResult() {		return result;	}}